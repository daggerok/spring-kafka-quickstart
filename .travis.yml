service:
- docker

env:
  global:
  - TERM=dumb

language: java
jdk: oraclejdk8

addons:
  apt:
    update: true
    packages:
    - sudo
    - lsof
    - bash
    - unzip
    - curl
    - jq
    - libxml2-utils
    - docker-ce
    - python-pip

install: true
before_script:
- sudo pip install docker-compose httpie >/dev/null 2>&1
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 8080 80
# sdk / spring boot CLI:
- curl -s "https://get.sdkman.io" | bash
- mkdir -p "$HOME/.sdkman/etc"
- touch "$HOME/.sdkman/etc/config"
- sed -i -e 's/^sdkman_auto_answer=false$/sdkman_auto_answer=true/g' "$HOME/.sdkman/etc/config"
- source "$HOME/.sdkman/bin/sdkman-init.sh"
- sdk use springboot
- source "$HOME/.sdkman/bin/sdkman-init.sh"
- spring install org.springframework.cloud:spring-cloud-cli:1.3.3.RELEASE
- source "$HOME/.sdkman/bin/sdkman-init.sh"
- spring cloud --list
- ( spring cloud kafka || triue ) &
- sleep 25

script:
- bash gradlew >/dev/null
- java -jar ./build/libs/*.jar &
- wait_for 8080
- http :8080 message=hello
- stop_any 8080 80
#
- bash ./build/libs/*.jar &
- wait_for 8080
- http :8080 message=ololo
- stop_any 8080 80
#
- bash mvnw >/dev/null
- java -jar ./target/*.jar &
- wait_for 8080
- http :8080 message=trololo
- stop_any 8080 80
#
- bash ./target/*.jar &
- wait_for 8080
- http :8080 message=hohoho
- stop_any 8080 80

before_deploy:
- killall -9 java
- ./gradlew documentation

deploy:
  provider: pages
  skip-cleanup: true
  # travis encrypt GITHUB_TOKEN=<your github repo token> --add
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages

before_cache:
- sudo rm -rf $HOME/.gradle/caches/*/fileHashes/fileHashes.bin
- sudo rm -rf $HOME/.gradle/caches/*/fileHashes/fileHashes.lock
- sudo rm -rf $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker
